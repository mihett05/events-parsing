from abc import ABCMeta, abstractmethod

import MainService.Domain.Events.Dtos as dtos
import MainService.Domain.Events.Entities as ent


class Eventsrepository(metaclass= ABCMeta):
    @abstractmethod
    async def create(self, dto: dtos.CreateEventDto) -> ent.Event: ...
    @abstractmethod
    async def read(self, id_: int) -> ent.Event: ...
    @abstractmethod
    async def read_for_user(self, dto: dtos.ReadUserEventsDto) -> list[ent.Event]: ...
    @abstractmethod
    async def read_for_organization(self, dto: dtos.ReadOrganizationEventsDto) -> list[ent.Event]: ...
    @abstractmethod
    async def update(self, event: ent.Event) -> ent.Event: ...
    @abstractmethod
    async def delete(self, event: ent.Event) -> ent.Event: ...
