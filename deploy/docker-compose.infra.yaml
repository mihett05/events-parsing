services:
  registry:
    image: registry:2
    restart: always
    ports:
      - "5000:5000"
    networks:
      - registry
    volumes:
      - registry-data:/var/lib/registry
    environment:
      - REGISTRY_STORAGE_DELETE_ENABLED=true
  
  registry_cleanup:
    image: docker:cli
    volumes:
      - ./cleanup.sh:/cleanup.sh
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: sh -c "chmod +x /cleanup.sh && sh /cleanup.sh"
    networks:
      - registry
    depends_on:
      - registry

  postgres:
    image: postgres:17
    restart: always
    ports:
      - "5432:5432"
    networks:
      - postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - postgres
      - monitoring
  
  rabbit:
    image: rabbitmq:3.13-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
      - RABBITMQ_ENABLE_PROMETHEUS=true
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - rabbit
      - monitoring
  
  minio:
    restart: always
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z-cpuv1
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      - MINIO_SERVER_URL=https://files.events.lovepaw.ru
      - MINIO_BROWSER_REDIRECT_URL=https://files.events.lovepaw.ru/minio/ui
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - minio-data:/data
    networks:
      - minio

  caddy:
    image: caddy:2.9
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - registry
      - caddy
      - minio
    volumes:
      - ./caddy/conf:/etc/caddy
      - caddy-data:/data
      - caddy-config:/config
  
  prometheus:
    image: prom/prometheus:v3.4.0
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    networks:
      - monitoring
  
  grafana:
    image: grafana/grafana:12.0.1
    restart: always
    ports:
      - "3001:3001"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/security.ini:/etc/grafana/security.ini
      - grafana-data:/var/lib/grafana
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/security.ini
      - GF_SERVER_HTTP_PORT=3001
    networks:
      - monitoring
      - caddy
    depends_on:
      - prometheus


networks:
  registry:
    driver: bridge
  postgres:
    driver: bridge
  caddy:
    driver: bridge
  rabbit:
    driver: bridge
  minio:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  registry-data:
    driver: local
  postgres-data:
    driver: local
  caddy-data:
    driver: local
  caddy-config:
    driver: local
  rabbitmq-data:
    driver: local
  minio-data:
    driver: local
  grafana-data:
    driver: local
