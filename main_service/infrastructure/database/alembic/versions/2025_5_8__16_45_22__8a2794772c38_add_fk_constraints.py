"""Add fk constraints

Revision ID: 8a2794772c38
Revises: cbfd6db63e43
Create Date: 2025-05-08 16:45:22.888700

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8a2794772c38"
down_revision: Union[str, None] = "cbfd6db63e43"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fk_attachments_mail_id_mails", "attachments", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_attachments_event_id_events", "attachments", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_attachments_mail_id_mails"),
        "attachments",
        "mails",
        ["mail_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        op.f("fk_attachments_event_id_events"),
        "attachments",
        "events",
        ["event_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.drop_constraint(
        "fk_events_organization_id_organizations", "events", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_events_organization_id_organizations"),
        "events",
        "organizations",
        ["organization_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.drop_constraint("fk_mails_event_id_events", "mails", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_mails_event_id_events"),
        "mails",
        "events",
        ["event_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.drop_constraint(
        "fk_notifications_recipient_id_users",
        "notifications",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_notifications_recipient_id_users"),
        "notifications",
        "users",
        ["recipient_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.alter_column(
        "organization_tokens",
        "created_by",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.drop_constraint(
        "fk_organization_tokens_created_by_users",
        "organization_tokens",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_organization_tokens_used_by_users",
        "organization_tokens",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_organization_tokens_used_by_users"),
        "organization_tokens",
        "users",
        ["used_by"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        op.f("fk_organization_tokens_created_by_users"),
        "organization_tokens",
        "users",
        ["created_by"],
        ["id"],
        ondelete="SET NULL",
    )
    op.drop_constraint(
        "fk_organizations_owner_id_users", "organizations", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_organizations_owner_id_users"),
        "organizations",
        "users",
        ["owner_id"],
        ["id"],
        ondelete="SET DEFAULT",
    )
    op.drop_constraint(
        "fk_user_organization_role_user_id_users",
        "user_organization_role",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_user_organization_role_organization_id_organizations",
        "user_organization_role",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_user_organization_role_user_id_users"),
        "user_organization_role",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("fk_user_organization_role_organization_id_organizations"),
        "user_organization_role",
        "organizations",
        ["organization_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("fk_user_organization_role_organization_id_organizations"),
        "user_organization_role",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_user_organization_role_user_id_users"),
        "user_organization_role",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_user_organization_role_organization_id_organizations",
        "user_organization_role",
        "organizations",
        ["organization_id"],
        ["id"],
    )
    op.create_foreign_key(
        "fk_user_organization_role_user_id_users",
        "user_organization_role",
        "users",
        ["user_id"],
        ["id"],
    )
    op.drop_constraint(
        op.f("fk_organizations_owner_id_users"),
        "organizations",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_organizations_owner_id_users",
        "organizations",
        "users",
        ["owner_id"],
        ["id"],
    )
    op.drop_constraint(
        op.f("fk_organization_tokens_created_by_users"),
        "organization_tokens",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_organization_tokens_used_by_users"),
        "organization_tokens",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_organization_tokens_used_by_users",
        "organization_tokens",
        "users",
        ["used_by"],
        ["id"],
    )
    op.create_foreign_key(
        "fk_organization_tokens_created_by_users",
        "organization_tokens",
        "users",
        ["created_by"],
        ["id"],
    )
    op.alter_column(
        "organization_tokens",
        "created_by",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.drop_constraint(
        op.f("fk_notifications_recipient_id_users"),
        "notifications",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_notifications_recipient_id_users",
        "notifications",
        "users",
        ["recipient_id"],
        ["id"],
    )
    op.drop_constraint(
        op.f("fk_mails_event_id_events"), "mails", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_mails_event_id_events", "mails", "events", ["event_id"], ["id"]
    )
    op.drop_constraint(
        op.f("fk_events_organization_id_organizations"),
        "events",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_events_organization_id_organizations",
        "events",
        "organizations",
        ["organization_id"],
        ["id"],
    )
    op.drop_constraint(
        op.f("fk_attachments_event_id_events"),
        "attachments",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_attachments_mail_id_mails"), "attachments", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_attachments_event_id_events",
        "attachments",
        "events",
        ["event_id"],
        ["id"],
    )
    op.create_foreign_key(
        "fk_attachments_mail_id_mails",
        "attachments",
        "mails",
        ["mail_id"],
        ["id"],
    )
    # ### end Alembic commands ###
