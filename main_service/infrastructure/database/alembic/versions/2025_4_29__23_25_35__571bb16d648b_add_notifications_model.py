"""Add notifications model

Revision ID: 571bb16d648b
Revises: fcb766c9c616
Create Date: 2025-04-29 23:25:35.966182

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "571bb16d648b"
down_revision: Union[str, None] = "fcb766c9c616"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("SENT", "UNSENT", name="NotificationStatusEnum").create(
        op.get_bind()
    )
    sa.Enum("HTML", "RAW_TEXT", name="NotificationFormatEnum").create(
        op.get_bind()
    )
    sa.Enum("EMAIL", "TELEGRAM", name="NotificationTypeEnum").create(
        op.get_bind()
    )
    op.create_table(
        "notifications",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("recipient_id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM(
                "EMAIL",
                "TELEGRAM",
                name="NotificationTypeEnum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "format",
            postgresql.ENUM(
                "HTML",
                "RAW_TEXT",
                name="NotificationFormatEnum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            postgresql.ENUM(
                "SENT",
                "UNSENT",
                name="NotificationStatusEnum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["recipient_id"],
            ["users.id"],
            name=op.f("fk_notifications_recipient_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_notifications")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("notifications")
    sa.Enum("EMAIL", "TELEGRAM", name="NotificationTypeEnum").drop(
        op.get_bind()
    )
    sa.Enum("HTML", "RAW_TEXT", name="NotificationFormatEnum").drop(
        op.get_bind()
    )
    sa.Enum("SENT", "UNSENT", name="NotificationStatusEnum").drop(op.get_bind())
    # ### end Alembic commands ###
