"""Add user settings model

Revision ID: 6761af9f8c51
Revises: 571bb16d648b
Create Date: 2025-04-30 16:08:52.247639

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6761af9f8c51"
down_revision: Union[str, None] = "571bb16d648b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("EMAIL", "TELEGRAM", name="UserNotificationSendToEnum").create(
        op.get_bind()
    )
    op.create_table(
        "user_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM(
                "EMAIL",
                "TELEGRAM",
                name="UserNotificationSendToEnum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_settings_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_settings")),
    )
    op.drop_constraint("fk_events_organization_id_users", "events", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_events_organization_id_organizations"),
        "events",
        "organizations",
        ["organization_id"],
        ["id"],
    )
    op.drop_column("notifications", "type")
    sa.Enum("EMAIL", "TELEGRAM", name="NotificationTypeEnum").drop(op.get_bind())
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("EMAIL", "TELEGRAM", name="NotificationTypeEnum").create(op.get_bind())
    op.add_column(
        "notifications",
        sa.Column(
            "type",
            postgresql.ENUM(
                "EMAIL",
                "TELEGRAM",
                name="NotificationTypeEnum",
                create_type=False,
            ),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(
        op.f("fk_events_organization_id_organizations"),
        "events",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_events_organization_id_users",
        "events",
        "users",
        ["organization_id"],
        ["id"],
    )
    op.drop_table("user_settings")
    sa.Enum("EMAIL", "TELEGRAM", name="UserNotificationSendToEnum").drop(op.get_bind())
    # ### end Alembic commands ###
