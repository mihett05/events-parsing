"""Add UserOrganizationRoles model

Revision ID: da1992e6fa8d
Revises: 7caa48a1bab4
Create Date: 2025-05-03 22:41:57.051564

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "da1992e6fa8d"
down_revision: Union[str, None] = "7caa48a1bab4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "SUPER_USER",
        "SUPER_OWNER",
        "SUPER_ADMIN",
        "SUPER_REDACTOR",
        "OWNER",
        "ADMIN",
        "REDACTOR",
        "PUBLIC",
        name="RoleEnum",
    ).create(op.get_bind())
    op.create_table(
        "user_organization_role",
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "role",
            postgresql.ENUM(
                "SUPER_USER",
                "SUPER_OWNER",
                "SUPER_ADMIN",
                "SUPER_REDACTOR",
                "OWNER",
                "ADMIN",
                "REDACTOR",
                "PUBLIC",
                name="RoleEnum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f(
                "fk_user_organization_role_organization_id_organizations"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_organization_role_user_id_users"),
        ),
        sa.PrimaryKeyConstraint(
            "organization_id", "user_id", name=op.f("pk_user_organization_role")
        ),
    )
    op.drop_table("association_table")
    sa.Enum("OWNER", "ADMIN", "REDACTOR", name="userroleenum").drop(
        op.get_bind()
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("OWNER", "ADMIN", "REDACTOR", name="userroleenum").create(
        op.get_bind()
    )
    op.create_table(
        "association_table",
        sa.Column(
            "organization_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "role",
            postgresql.ENUM(
                "OWNER",
                "ADMIN",
                "REDACTOR",
                name="userroleenum",
                create_type=False,
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name="fk_association_table_organization_id_organizations",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="fk_association_table_user_id_users"
        ),
    )
    op.drop_table("user_organization_role")
    sa.Enum(
        "SUPER_USER",
        "SUPER_OWNER",
        "SUPER_ADMIN",
        "SUPER_REDACTOR",
        "OWNER",
        "ADMIN",
        "REDACTOR",
        "PUBLIC",
        name="RoleEnum",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
