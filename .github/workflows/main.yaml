name: Build and deploy

on:
  push:
    branches:
      - master

jobs:
  build-main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push main service
        env:
          REGISTRY: ${{ secrets.REGISTRY }}
          REPOSITORY: main-service
        run: |
          docker build \
            -t $REGISTRY/$REPOSITORY:${{ github.sha }} \
            -t $REGISTRY/$REPOSITORY:latest ./main_service
          docker push --all-tags $REGISTRY/$REPOSITORY
      
      - name: Build and push migrations
        env:
          REGISTRY: ${{ secrets.REGISTRY }}
          REPOSITORY: main-service-migrations
        run: |
          docker build \
            -t $REGISTRY/$REPOSITORY:${{ github.sha }} \
            -t $REGISTRY/$REPOSITORY:latest -f ./main_service/migrations.dockerfile ./main_service
          docker push --all-tags $REGISTRY/$REPOSITORY
  
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push frontend
        env:
          REGISTRY: ${{ secrets.REGISTRY }}
          REPOSITORY: frontend
        run: |
          docker build \
            -t $REGISTRY/$REPOSITORY:${{ github.sha }} \
            -t $REGISTRY/$REPOSITORY:latest ./frontend
          docker push --all-tags $REGISTRY/$REPOSITORY

  deploy:
    runs-on: ubuntu-latest
    needs: [build-main, build-frontend]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v5
      
      - name: Install ansible
        run: pip install ansible passlib

      - name: Run playbook
        run: |
          cd deploy
          ansible-galaxy install -r requirements.yaml
          ansible-playbook deploy.yaml \
          --key-file "${{ secrets.CI_PRIVATE_KEY }}" \
          --inventory .hosts \
          --vault-password "${{ secrets.VAULT_PASSWORD }}"
        env:
          ANSIBLE_INVENTORY: |
            [master]
            ${{ secrets.CI_SERVER }}
